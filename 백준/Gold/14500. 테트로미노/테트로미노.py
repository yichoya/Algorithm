import sys
n, m = map(int, sys.stdin.readline().split())

# 테트로미노의 모든 경우의 수(총 19개) 저장
tetromino = [
    [[0, 0], [0, 1], [0, 2], [0, 3]],
    [[0, 0], [1, 0], [2, 0], [3, 0]],
    [[0, 0], [0, 1], [1, 0], [1, 1]],
    [[0, 0], [0, 1], [0, 2], [-1, 2]],
    [[0, 0], [1, 0], [2, 0], [2, 1]],
    [[0, 0], [1, 0], [0, 1], [0, 2]],
    [[0, 0], [0, 1], [1, 1], [2, 1]],
    [[0, 0], [0, 1], [-1, 1], [-1, 2]],
    [[0, 0], [1, 0], [1, 1], [2, 1]],
    [[0, 0], [0, 1], [0, 2], [-1, 1]],
    [[0, 0], [1, 0], [2, 0], [1, 1]],
    [[0, 0], [0, 1], [0, 2], [1, 1]],
    [[0, 0], [0, 1], [-1, 1], [1, 1]],
    [[0, 0], [0, 1], [1, 1], [1, 2]],
    [[0, 0], [1, 0], [1, -1], [2, -1]],
    [[0, 0], [1, 0], [1, 1], [1, 2]],
    [[0, 0], [0, 1], [1, 0], [2, 0]],
    [[0, 0], [0, 1], [0, 2], [1, 2]],
    [[0, 0], [1, 0], [2, 0], [2, -1]]
]

board = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]
answer = 0

for x in range(n):
    for y in range(m):
        for t in range(0, 19):
            sum = 0
            for i in range(4):
                nx = x + tetromino[t][i][0]
                ny = y + tetromino[t][i][1]
                if nx < 0 or nx >= n or ny < 0 or ny >= m:
                    break
                sum += board[nx][ny]
            answer = max(answer, sum)

print(answer)